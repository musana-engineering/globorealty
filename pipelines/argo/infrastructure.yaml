apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: infra-0fec8a
  namespace: argo
spec:
  entrypoint: update
  podGC:
    strategy: OnWorkflowSuccess
  arguments:
    parameters:
    - name: docker-image
      value: musanaengineering/platformtools:terraform:1.0.0
    - name: infrastructure-repository
      value: https://github.com/musana-engineering/globorealty.git
  templates:
    - name: plan
      inputs:
        artifacts:
        - name: terraform
          path: /home/terraform
          git:
            repo: "{{workflow.parameters.infrastructure-repository}}"
            depth: 1
        volumes:
        - name: pipeline-secrets
          secret: 
            secretName: infra-0fec8a
      script:
        imagePullPolicy: "Always"
        image: "{{workflow.parameters.docker-image}}"
        command: [/bin/bash]
        source: |
    
          export ARM_CLIENT_ID="your_azure_sp_client_id"
          export ARM_CLIENT_SECRET="$CLIENT_SECRET"
          export ARM_TENANT_ID="your_azure_tenant_id"
          export ARM_SUBSCRIPTION_ID="your_azure_subscription_id"

          cd /home/terraform/globorealty/infrastructure

          terraform init -input=false
          terraform plan -parallelism=2 -input=false -no-color -out=/home/terraform/artifacts/Infrastructure.tfplan /home/argo >> /tmp/terraform-change.log
        env:
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: pipeline-secrets
              key: CLIENT_SECRET  
      outputs:
        artifacts:
          - name: terraform-plan
            path: /home/terraform/home/terraform/artifacts/
            archive:
              none: {}
          - name: terraform-log
            path: /tmp/terraform-change.log
            archive:
              none: {}

    - name: apply
      inputs:
        artifacts:
        - name: terraform-plan
          path: /home/terraform
        volumes:
        - name: pipeline-secrets
          secret: 
            secretName: infra-0fec8a
      script:
        imagePullPolicy: "Always"
        image: "{{workflow.parameters.docker-image}}"
        command: [/bin/bash]
        source: |

          export ARM_CLIENT_ID="your_azure_sp_client_id"
          export ARM_CLIENT_SECRET="$CLIENT_SECRET"
          export ARM_TENANT_ID="your_azure_tenant_id"
          export ARM_SUBSCRIPTION_ID="your_azure_subscription_id"

          /bin/terraform apply -input=false -parallelism=2 -no-color /home/terraform/artifacts/Infrastructure.tfplan

        env:
        - name: CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              name: pipeline-secrets
              key: CLIENT_SECRET  

    - name: approve
      suspend: {}

    - name: update
      dag:
        tasks:
          - name: plan
            template: plan
          - name: approve
            dependencies: [plan]
            template: approve
          - name: apply
            template: apply
            dependencies: [plan, approve]
            arguments:
              artifacts:
              - name: terraform-plan
                from: "{{tasks.plan.outputs.artifacts.terraform-plan}}"